// @ts-nocheck
// do {
//   console.log("do while loop");
// } while (5 < 4);

// while (5 < 4) {
//   console.log("while loop");
// }

// for (var i = 0; i < 10; i++) {
//   if (i === 5) {
//     // break
//     continue;
//   }
//   console.log(i);
// }

// 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
// 1, 2, 3, 4, 6, 7, 8, 9, 10
// for (var i = 1; i < 11; i++) {
//   for (var j = 1; j < 11; j++) {
//     // console.log(`i = ${i} and j = ${j}`); // both work, but first one is strongly recommended approach.
//     // console.log('i = ' + i + ' and j = ' + j);
//     console.log(`${i} * ${j} = ${i * j} `);
//     // console.log(i + "*" + j + "=" + i * j);
//     // console.log("i * j");
//   }
// }

// რიცხვი ლუწია თუ არა, შეგვიძლია გავიგოთ შემდეგნაირად:
// number % 2 === 0
//შექმენით ალგორითმი რომელიც დაითვლის თუ რამდენი გამყოფი აქვს მომხმარებლის მიერ შემოტანილ რიცხვს

// var number = prompt(
//   "შეიყვანეთ რიცხვი (გეხვეწები 1000მდე მეტი არ შეიყვანო. მეზარება დაანგარიშება)"
// );

// var number = 9;

// var counter = 0;
// for (var i = 1; i <= parseInt(number); i++) {
//   debugger;
//   if (parseInt(number) % i === 0) {
//     console.log(`${i} is a divisor of ${number}`);
//     counter++;
//   }
// }

// console.log(counter);

// for (var i = 1; i <= 20; i++) {
//   console.log(i);
// }
//  1, 2, 3, 4, 5, 6, 7, 8, 9, 10

// var counter = 0;
// for (var i = 1; i <= 120; i++) {
//   // var counter = 0; // აქ რომ გამოვაცხადოთ ქაუნთერი, ის ყოველ შემოსვლაზე ახლიდან გახდება 0, ამიტომ შედეგი იქნება არასწორი
//   if (i % 4 === 0) {
//     // console.log(`${i} is divisible by 4`);
//     counter++;
//   }
// }
// console.log(counter);

// var number1 = parseInt(prompt('Enter first number')); // 10 -> 5
// var number2 = parseInt(prompt('Enter second number')); // 5 -> 10

// if (isNaN(number1)) {
//   var number1 = parseInt(prompt('Enter first number')); // 10 -> 5
// }
// if (isNaN(number2)) {
//   var number2 = parseInt(prompt('Enter second number')); // 10 -> 5
// }
// // if (number1 > number2) {
// //   number1 = number1 + number2; // 15
// //   number2 = number1 - number2; // 10
// //   number1 = number1 - number2; // 5
// // }

// if (number1 < number2) {
//   for (var i = number1 + 1; i < number2; i++) {
//     console.log(i);
//   }
// } else {
//   for (var i = number2 + 1; i < number1; i++) {
//     console.log(i);
//   }
// }

// შექმენით ალგორითმი რომელიც კონსოლში დალოგავს გამრავლების ტაბულას
//Write a for loop and write a multiplication table

// შექმენით ალგორითმი რომელიც კონსოლში დაბეჭდავს ყველა ლუწ რიცხვს 0 დან 20 მდე
// შექმენით ალგორითმი რომელიც დაითვლის თუ რამდენი 4 ის ჯერადი რიცხვია მოთავსებული 0 დან 120 მდე
// შექმენით ალგორითმი რომელიც დაითვლის თუ რამდენი გამყოფი აქვს მომხმარებლის მიერ შემოტანილ რიცხვს
// შექმენით ალგორითმი რომელიც დაბეჭდავს რიცხვებს მომხმარებლის მიერ შემოყვანილ რიცხვებს შორის

// Თხოვეთ მომხმარებელს რომ შემოიტანოს რიცხვი 1 დან -100 მდე,დაბეჭდეთ ყველა კენტი რიცხვი 0 დან მომხმარებლის მიერ
//შემოყვანილ რიცხვამდე

// Თხოვეთ მომხმარებელს რომ შემოიყვანოს რიცხვი 300 დან 500 მდე, შემდგომ დააგენერირეთ რენდომული რიცხვი 50 დან 100 მდე
// და დაბეჭდეთ ყველა 2 ის ჯერადი რიცხვი რენდომულად დაგენერირებულ რიცხვსა და მომხმარებლის მიერ შემოყვანილ რიცხვს შორის.

// Თხოვეთ მომხმარებელს რომ შემოიტანოს რიცხვი 70 დან 100 მდე და დაბეჭდეთ ყველა რიცხვის საშვალო არითმეტიკული 0 დან
//მომხმარებლის მიერ შემოყვანილ რიცხვს შორის.

// Დაბეჭდეთ ყველა 5 ის ჯერადი რიცხვი 0 დან 1600 მდე რომელიც არ იყოფა 10 ზე უნაშთოდ.

// Თხოვეთ მომხმარებელს რომ შემოიყვანოს რიცხვი 50 დან 100 მდე და დაბეჭდეთ კონსოლში მომხმარებლის მიერ შემოყვანილი
//რიცხვის ფაქტორეალი აქტორეალის გამომთვლელი ფორმულაა :
// 5 ! = 1 * 2 * 3 * 4 * 5;  8! = 1 * 2 * 3 * 4 * 5 * 6 * 7 * 8;

// Თხოვეთ მომხმარებელს შემოიტანოს გარკვეული რიცხვი 100 დან 200 მდე და დაბეჭდეთ კონსოლში ყველა ის რიცხვი 0 დან
//მომხმარებლის მიერ შემოყვანილ რიცხვამდე რომელიც მომხმარებლის მიერ შემოყვანილ რიცხვს უნაშთოდ ყოფს.

// Თხოვეთ მომხმარებელს შემოიტანოს რიცხვი და დაადგინეთ ეს რიცხვი მარტივია თუ შედგენილი.
// Რიცხვი არის მარტივი თუ მას 2 გამყოფი ყავს 1 და საკუთარი თავი, რიცხვი არის შედგენილი თუ მას 2 ზე მეტი გამყოფი
//ყავს, რიცხვი 1 არც შედგენილია და არც მარტივი რადგან 1 გამყოფი ყავს.

// Თხოვეთ მომხმარებელს შემოიტანოს რიცხვი  და დაბეჭდეთ კონსოლში ყველა რიცხვის ნამრავლი რეზულტატი 1 დან მომხმარებლის მიერ შემოყვანილ რიცხვამდე

//Თხოვეთ მომხმარებელს რომ შემოიტანოს რიცხვი 1 დან 10 მდე და დაბეჭდეთ კონსოლში მომხმარებლის მიერ შემოტანილ რიცხვზე გამრავლების ტაბულა

// const reverseNumber = (num) => {
//   let reversed = 0;
//   while (num > 0) {
//     reversed = reversed * 10 + (num % 10);
//     num = Math.floor(num / 10);
//   }
//   return reversed;
// };

// console.log(reverseNumber(123));
// console.log(reverseNumber(12345));
// console.log(reverseNumber(123456789));

console.log(Math.floor(Math.random() * (100 - 50) + 50));
